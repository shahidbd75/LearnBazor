@page "/product-forms"

<PageTitle>Product Entry</PageTitle>
<div class="col-12 offset-md-2 col-md-8 border">
    <div class="text-center pt-4">
        <h2 class="text-primary">Product Form</h2>
        <hr />
    </div>
    <div class="mx-2 px-2">
        <EditForm FormName="CreateProduct" Model="Product" OnValidSubmit="CreateProductHandler">
            <DataAnnotationsValidator />
            <div class="form-group py-2">
                <label>Name</label>
                <InputText class="form-control" @bind-Value="Product.Name" />
                <ValidationMessage For="@(() => Product.Name)" />
            </div>
            <div class="form-group py-2">
                <label>Description</label>
                <InputTextArea class="form-control" @bind-Value="Product.Description" />
            </div>
            <div class="form-group py-2">
                <label>Price</label>
                <InputNumber class="form-control" @bind-Value="Product.Price" />
                <ValidationMessage For="@(()=> Product.Price)" />
            </div>
            <div class="form-group py-2">
                <label>Category</label>
                <InputSelect class="form-select" @bind-Value="Product.Category">
                    @foreach (var cat in Enum.GetValues(typeof(Category))) {
                        <option value="@cat">@cat</option>
                    }
                </InputSelect>
            </div>
            <div class="form-group py-2">
                <label>Is Available</label>
                <InputCheckbox class="form-check-input" @bind-Value="Product.IsAvailable" />
            </div>
            <div class="form-group py-2">
                <label>Offer End Date</label>
                <InputDate class="form-control" @bind-Value="Product.OfferEnd" />
            </div>
            <button type="submit" class="btn btn-success my-3 w-200" >Create Product</button>
            <p class="text-success">@(IsProcessing == true ? "Processing..." : "")</p>
        </EditForm>
    </div>

    @if (CreatedProduct is not null)
    {
        <div class="card mx-2 pt-4">
            <div class="card-header">
                <h3 class="text-dark">Created Product</h3>
            </div>
            <div class="card-body">
                <ul class="list-group">
                    <li class="list-group-item">Name: @CreatedProduct.Name</li>
                    <li class="list-group-item">Price: @CreatedProduct.Price</li>
                    <li class="list-group-item">Is Available: @CreatedProduct.IsAvailable</li>
                    <li class="list-group-item">Description: @CreatedProduct.Description</li>
                    <li class="list-group-item">Category: @CreatedProduct.Category</li>
                    <li class="list-group-item">Offerend: @CreatedProduct.OfferEnd</li>
                </ul>
            </div>
        </div>
    }
</div>

@code {
    [SupplyParameterFromForm(FormName = "CreateProduct")]
    public Product Product { get; set; } = new Product();

    public bool IsProcessing { get; set; } = false;

    private Product? CreatedProduct { get; set; }

    private async Task CreateProductHandler()
    {
        IsProcessing = true;
        this.CreatedProduct = null;
        await Task.Delay(2000);
        this.CreatedProduct = this.Product;
        this.Product = new();
        IsProcessing = false;
    }

}
